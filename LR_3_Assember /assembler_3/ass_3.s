//Если два целых числа равны, то обнулить их, если нет, то сделать оба равными наибольшему из них
.global _main //точка входа в программу
.align 2

_main:
    mov x1, #11 //Первое число
    mov x2, #10 //Второе число

    cmp x1, x2 //сравниваем x1 и x2
    b.ne else_if // если x1 != x2, переходим к else_if
    mov x1, #0 // если x1 == x2, обнуляем оба значения
    mov x2, #0
    b end_if // выходим из конструкции в end_if
else_if:
    b.gt first // если x1 > x2 переходим к first
    b.lt second // если x1 < x2 переходим к second
first:
    mov x2, x1 // оба значения становятся равными наибольшему из них (x1)
    b end_if //переходим в end_if
second:
    mov x1, x2 // оба значения становятся равными наибольшему из них (x2)
    b end_if //переходим в end_if
end_if:
    str x1, [sp] //сохраняем первое число в стековый регистр
    str x2, [sp, #8] //сохраняем второе число в стековый регистр + 8 байт смещение
    adr x0, output_str //загружаем адрес строки в X0

    bl _printf //С-функция вывода
    mov x0, #0 //установление кода возврата
    mov x16, #1 //системный вызов 1 завершает программу
    svc #0x80 //завершаем системную функцию с номером 1
    //вывод результата в консоль
    output_str:
            .asciz "ПЕРВОЕ ЧИСЛО: %d\nВТОРОЕ ЧИСЛО: %d\n"
